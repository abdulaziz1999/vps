services:
  gitea:
    image: docker.gitea.com/gitea:latest
    container_name: gitea
    environment:
      - USER_UID=1000
      - USER_GID=1000
      - GITEA__server__ROOT_URL=https://ominous-adventure-4gvwrwg96g735xj5-3000.app.github.dev
      - GITEA__server__HTTP_PORT=3000
      - GITEA__webhook__ALLOWED_HOST_LIST=*
      - GITEA__database__DB_TYPE=mysql
      - GITEA__database__HOST=mysql-db
      - GITEA__database__NAME=gitea
      - GITEA__database__USER=root
      - GITEA__database__PASSWD=root99
      - GITEA__security__INSTALL_LOCK=true
      - GITEA__service__DISABLE_REGISTRATION=false
      - GITEA__admin__USERNAME=gitea
      - GITEA__admin__PASSWORD="gitea!@#"
      - GITEA__admin__EMAIL=gitea@gmail.com
      - TZ=Asia/Jakarta
    restart: always
    volumes:
      - gitea-data:/data
    ports:
      - "3000:3000"
      - "222:22"
    networks:
      - ci-network
    depends_on:
      mysql:
        condition: service_healthy

  mysql:
    image: mysql:8.0
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: root99
      MYSQL_DATABASE: gitea
      MYSQL_USER: aziz
      MYSQL_PASSWORD: password
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - ci-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  drone-server:
    image: drone/drone:2
    container_name: drone-server
    ports:
      - "8000:80"  # External:8000 → Internal:80
    volumes:
      - drone-data:/data
    environment:
      - DRONE_GITEA_SERVER=https://ominous-adventure-4gvwrwg96g735xj5-3000.app.github.dev
      - DRONE_GITEA_CLIENT_ID=23e90501-111c-45da-ae16-6389dd6f8460
      - DRONE_GITEA_CLIENT_SECRET=gto_pfb35fudsqvhgucjmnp6zkuo3qpdopg7mermtfsv5xytdsvwbasa
      - DRONE_RPC_SECRET=fe581ca7ae1b68bed0800e1023d055b5
      - DRONE_SERVER_HOST=ominous-adventure-4gvwrwg96g735xj5-8000.app.github.dev  # ← FIXED: Internal port 80
      - DRONE_SERVER_PROTO=https
      - DRONE_WEBHOOK_ALLOW_LOCAL_NETWORKS=true
    restart: on-failure
    depends_on:
      - gitea
    networks:
      - ci-network

  drone-runner:
    image: drone/drone-runner-docker:1
    container_name: drone-runner
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    network_mode: host
    environment:
      - DRONE_RPC_PROTO=http
      - DRONE_RPC_HOST=ominous-adventure-4gvwrwg96g735xj5-8000.app.github.dev  # ← FIXED: Internal port 80
      - DRONE_RPC_SECRET=fe581ca7ae1b68bed0800e1023d055b5
      - DRONE_RUNNER_CAPACITY=2
      - DRONE_RUNNER_NAME=drone-my-runner
    restart: on-failure
    depends_on:
      - drone-server

  gitea-actions-runner:
    image: gitea/act_runner:latest
    container_name: gitea-actions-runner
    environment:
      - GITEA_INSTANCE_URL=https://ominous-adventure-4gvwrwg96g735xj5-3000.app.github.dev
      - GITEA_RUNNER_REGISTRATION_TOKEN=WGQez3BmQOBpUlU3WpT9g4kYVkZOe8UTaDJkcRvi
      - GITEA_RUNNER_NAME=my-gitea-runner
      - CONFIG_FILE=/config.yaml
    volumes:
      - ./config.yaml:/config.yaml
      - /var/run/docker.sock:/var/run/docker.sock
      - gitea-actions-data:/data
    restart: on-failure
    depends_on:
      - gitea
    networks:
      - ci-network

volumes:
  gitea-data:
  mysql-data:
  drone-data:
  gitea-actions-data:

networks:
  ci-network:
    name: ci-network  # ← Opsional: jika ingin custom network name
    driver: bridge